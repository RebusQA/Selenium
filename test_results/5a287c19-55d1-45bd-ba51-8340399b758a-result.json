{"name": "test_buy_product", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='billing_last_nam']\"}\n  (Session info: chrome=124.0.6367.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00D4C113+48259]\n\t(No symbol) [0x00CDCA41]\n\t(No symbol) [0x00BD0A17]\n\t(No symbol) [0x00C10BED]\n\t(No symbol) [0x00C10C9B]\n\t(No symbol) [0x00C4BC12]\n\t(No symbol) [0x00C30DE4]\n\t(No symbol) [0x00C49B9C]\n\t(No symbol) [0x00C30B36]\n\t(No symbol) [0x00C0570D]\n\t(No symbol) [0x00C062CD]\n\tGetHandleVerifier [0x01006533+2908323]\n\tGetHandleVerifier [0x01043B4B+3159739]\n\tGetHandleVerifier [0x00DE505B+674763]\n\tGetHandleVerifier [0x00DEB21C+699788]\n\t(No symbol) [0x00CE6244]\n\t(No symbol) [0x00CE2298]\n\t(No symbol) [0x00CE242C]\n\t(No symbol) [0x00CD4BB0]\n\tBaseThreadInitThunk [0x771E7BA9+25]\n\tRtlInitializeExceptionChain [0x77E7BE3B+107]\n\tRtlClearBits [0x77E7BDBF+191]", "trace": "set_up = None\n\n    @allure.description(\"Test buy product\")\n    def test_buy_product(set_up):\n    \n            # Очистка терминала от лишних сообщений\n            options = Options()\n            options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n            driver = webdriver.Chrome(options=options, service=ChromeService(ChromeDriverManager().install()))\n    \n            # Запуск экземпляров\n            login = Login_page(driver)\n            login.authorization()\n    \n            mp = Main_page(driver)\n            mp.select_product()\n    \n            cp = Cart_page(driver)\n            cp.order_product()\n    \n            cip = Client_info_page(driver)\n>           cip.payment_details()\n\ntests\\test_buy_product.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\client_info_page.py:97: in payment_details\n    self.input_last_name(\"Иванов\")\npages\\client_info_page.py:58: in input_last_name\n    self.get_last_name().clear()\npages\\client_info_page.py:35: in get_last_name\n    return self.driver.find_element(By.XPATH, self.last_name_locator)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000204DB1517C0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x771E7BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x77E7BE3B+107]\\\\n\\\\tRtlClearBits [0x77E7BDBF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='billing_last_nam']\"}\nE         (Session info: chrome=124.0.6367.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00D4C113+48259]\nE       \t(No symbol) [0x00CDCA41]\nE       \t(No symbol) [0x00BD0A17]\nE       \t(No symbol) [0x00C10BED]\nE       \t(No symbol) [0x00C10C9B]\nE       \t(No symbol) [0x00C4BC12]\nE       \t(No symbol) [0x00C30DE4]\nE       \t(No symbol) [0x00C49B9C]\nE       \t(No symbol) [0x00C30B36]\nE       \t(No symbol) [0x00C0570D]\nE       \t(No symbol) [0x00C062CD]\nE       \tGetHandleVerifier [0x01006533+2908323]\nE       \tGetHandleVerifier [0x01043B4B+3159739]\nE       \tGetHandleVerifier [0x00DE505B+674763]\nE       \tGetHandleVerifier [0x00DEB21C+699788]\nE       \t(No symbol) [0x00CE6244]\nE       \t(No symbol) [0x00CE2298]\nE       \t(No symbol) [0x00CE242C]\nE       \t(No symbol) [0x00CD4BB0]\nE       \tBaseThreadInitThunk [0x771E7BA9+25]\nE       \tRtlInitializeExceptionChain [0x77E7BE3B+107]\nE       \tRtlClearBits [0x77E7BDBF+191]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "Test buy product", "steps": [{"name": "Authorization", "status": "passed", "start": 1715003728484, "stop": 1715003756015}, {"name": "Select product", "status": "passed", "start": 1715003756015, "stop": 1715003781464}, {"name": "Order product", "status": "passed", "start": 1715003781464, "stop": 1715003788597}, {"name": "Payment details", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='billing_last_nam']\"}\n  (Session info: chrome=124.0.6367.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00D4C113+48259]\n\t(No symbol) [0x00CDCA41]\n\t(No symbol) [0x00BD0A17]\n\t(No symbol) [0x00C10BED]\n\t(No symbol) [0x00C10C9B]\n\t(No symbol) [0x00C4BC12]\n\t(No symbol) [0x00C30DE4]\n\t(No symbol) [0x00C49B9C]\n\t(No symbol) [0x00C30B36]\n\t(No symbol) [0x00C0570D]\n\t(No symbol) [0x00C062CD]\n\tGetHandleVerifier [0x01006533+2908323]\n\tGetHandleVerifier [0x01043B4B+3159739]\n\tGetHandleVerifier [0x00DE505B+674763]\n\tGetHandleVerifier [0x00DEB21C+699788]\n\t(No symbol) [0x00CE6244]\n\t(No symbol) [0x00CE2298]\n\t(No symbol) [0x00CE242C]\n\t(No symbol) [0x00CD4BB0]\n\tBaseThreadInitThunk [0x771E7BA9+25]\n\tRtlInitializeExceptionChain [0x77E7BE3B+107]\n\tRtlClearBits [0x77E7BDBF+191]\n\n", "trace": "  File \"C:\\Users\\Rebus\\PycharmProjects\\HomeWork\\pages\\client_info_page.py\", line 97, in payment_details\n    self.input_last_name(\"Иванов\")\n  File \"C:\\Users\\Rebus\\PycharmProjects\\HomeWork\\pages\\client_info_page.py\", line 58, in input_last_name\n    self.get_last_name().clear()\n  File \"C:\\Users\\Rebus\\PycharmProjects\\HomeWork\\pages\\client_info_page.py\", line 35, in get_last_name\n    return self.driver.find_element(By.XPATH, self.last_name_locator)\n  File \"C:\\Users\\Rebus\\PycharmProjects\\HomeWork\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"C:\\Users\\Rebus\\PycharmProjects\\HomeWork\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Rebus\\PycharmProjects\\HomeWork\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1715003788598, "stop": 1715003791697}], "attachments": [{"name": "stdout", "source": "4b6a3a73-54ca-4033-82b0-ad2c8ffd740e-attachment.txt", "type": "text/plain"}], "start": 1715003713132, "stop": 1715003791705, "uuid": "3a830995-7d47-43aa-820b-a228dddafc51", "historyId": "22557127bd8e5c9d27d61f44787213b8", "testCaseId": "22557127bd8e5c9d27d61f44787213b8", "fullName": "tests.test_buy_product#test_buy_product", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_product"}, {"name": "host", "value": "RebusPC"}, {"name": "thread", "value": "13692-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_product"}]}